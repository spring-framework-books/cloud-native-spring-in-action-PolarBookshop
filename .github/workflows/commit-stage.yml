name: Commit Stage
on:
  push:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      # Checks out the currentGit repository
      - name: Checkout source code
        uses: actions/checkout@v4
        # Installs and configures a Java runtime
      - name: Set up JDK
        uses: actions/setup-java@v4
        # Defines which version, distribution, and cache type to use
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build, unit tests and integration tests
        # Ensures the Gradle wrapper is executable, solving Windows incompatibilities
        # Runs the Maven build task, which incompatibilities compiles the codebase and runs unit and integration tests
        run: |
          chmod +x mvnw
          ./mvnw install
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        # Assigns an identifier to the current step so that it can be referenced from subsequent steps
        id: scan
        with:
          # The path to the checked-out repository
          path: "${{ github.workspace }}"
          # Whether to fail the build in the event of security vulnerabilities
          fail-build: false
          #The minimum security category to be considered as an error (low, medium, high, critical)
          severity-cutoff: high
      - name: Upload vulnerability report
        # Uploads the security vulnerability report to itHub (SARIF format)
        uses: github/codeql-action/upload-sarif@v3
        # Uploads the report even if the previous step fails
        if: success() || failure()
        with:
          # Fetches the report from the output of the previous step
          sarif_file: ${{ steps.scan.outputs.sarif }}
      # - name: Setup tools
      #   uses: alexellis/setup-arkade@v3
      # - name: Install tools
      #   uses: alexellis/arkade-get@master
      #   with:
      #     kustomize: latest
      #     kubeconform: latest
      # - name: Validate Kubernetes manifests
      #   run: |
      #     kustomize build k8s | kubeconform --strict -
