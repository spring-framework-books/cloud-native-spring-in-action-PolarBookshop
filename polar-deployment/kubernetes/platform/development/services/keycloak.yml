apiVersion: apps/v1
kind: Deployment
metadata:
  name: polar-keycloak
  labels:
    app: polar-keycloak
spec:
  selector:
    matchLabels:
      app: polar-keycloak
  template:
    metadata:
      labels:
        app: polar-keycloak
    spec:
      containers:
        - name: polar-keycloak
          image: quay.io/keycloak/keycloak:26.2.5
          args:
            - "start-dev"
            - "--import-realm"
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: "admin"
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: "admin"
            # In a production environment, add a TLS certificate to Keycloak to either end-to-end encrypt the traffic between
            # the client or Keycloak, or to encrypt the traffic between your proxy and Keycloak.
            # Respect the proxy headers forwarded by the reverse proxy
            # In a production environment, verify which proxy type you are using, and restrict access to Keycloak
            # from other sources than your proxy if you continue to use proxy headers.
            - name: KC_PROXY_HEADERS
              value: "xforwarded"
            - name: KC_HTTP_ENABLED
              value: "true"
            # In this explorative setup, no strict hostname is set.
            # For production environments, set a hostname for a secure setup.
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_HTTP_MANAGEMENT_PORT
              value: "8081"
            - name: 'KC_CACHE'
              value: 'ispn'
            # Use the Kubernetes configuration for distributed caches which is based on DNS
            - name: 'KC_CACHE_STACK'
              value: 'kubernetes'
            # Passing the Pod's IP primary address to the JGroups clustering as this is required in IPv6 only setups
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # Instruct JGroups which DNS hostname to use to discover other Keycloak nodes
            # Needs to be unique for each Keycloak cluster
            - name: JAVA_OPTS_APPEND
              value: '-Djgroups.dns.query="keycloak-discovery" -Djgroups.bind.address=$(POD_IP)'

            # - name: 'KC_DB_URL_DATABASE'
            #   value: 'keycloak'
            # - name: 'KC_DB_URL_HOST'
            #   value: 'postgres'
            # - name: 'KC_DB'
            #   value: 'postgres'
            # # In a production environment, use a secret to store username and password to the database
            # - name: 'KC_DB_PASSWORD'
            #   value: 'keycloak'
            # - name: 'KC_DB_USERNAME'
            #   value: 'keycloak'
          ports:
            - name: http
              containerPort: 8080
            - name: management
              containerPort: 8081
          startupProbe:
            httpGet:
              path: /health/started
              port: 8081
            failureThreshold: 40
            periodSeconds: 10 
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8081
          resources:
            limits:
              cpu: 2000m
              memory: 2000Mi
            requests:
              cpu: 500m
              memory: 1700Mi
          volumeMounts:
            - name: polar-keycloak-config-volume
              mountPath: /opt/keycloak/data/import
      volumes:
        - name: polar-keycloak-config-volume
          configMap:
            name: polar-keycloak

---

apiVersion: v1
kind: Service
metadata:
  name: polar-keycloak
  labels:
    app: polar-keycloak
spec:
  type: ClusterIP
  selector:
    app: polar-keycloak
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: management
      protocol: TCP
      port: 8081
      targetPort: 8081
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  labels:
    app: polar-keycloak
spec:
  rules:
    - host: polar-keycloak
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: polar-keycloak
                port:
                  number: 80